"Language.ml" 15 161 169 "Language.ml" 15 161 171
type(
  t
)
ident(
  def l "Language.ml" 15 161 169 "Language.ml" 17 285 294
)
"Language.ml" 15 161 171 "Language.ml" 15 161 176
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 15 161 177 "Language.ml" 15 161 181
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 16 206 217 "Language.ml" 16 206 284
)
"Language.ml" 15 161 183 "Language.ml" 15 161 187
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 15 161 183 "Language.ml" 15 161 187
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 15 161 183 "Language.ml" 15 161 187
)
"Language.ml" 15 161 190 "Language.ml" 15 161 194
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 15 161 190 "Language.ml" 15 161 194
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 15 161 190 "Language.ml" 15 161 194
)
"Language.ml" 15 161 183 "Language.ml" 15 161 194
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 15 161 196 "Language.ml" 15 161 201
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 15 161 182 "Language.ml" 15 161 201
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 15 161 182 "Language.ml" 15 161 201
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 15 161 182 "Language.ml" 15 161 201
)
type(
  t
)
ident(
  def _0 "Language.ml" 15 161 182 "Language.ml" 15 161 201
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 15 161 182 "Language.ml" 15 161 201
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 15 161 181 "Language.ml" 15 161 203
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 16 206 217 "Language.ml" 16 206 231
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 16 206 237 "Language.ml" 16 206 238
type(
  t
)
ident(
  def l "Language.ml" 16 206 239 "Language.ml" 16 206 277
)
"Language.ml" 16 206 240 "Language.ml" 16 206 242
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 16 206 250 "Language.ml" 16 206 277
)
"Language.ml" 16 206 244 "Language.ml" 16 206 245
type(
  t
)
ident(
  def r "Language.ml" 16 206 250 "Language.ml" 16 206 277
)
"Language.ml" 16 206 240 "Language.ml" 16 206 245
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 16 206 257 "Language.ml" 16 206 267
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 16 206 268 "Language.ml" 16 206 270
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 16 206 240 "Language.ml" 16 206 242
)
"Language.ml" 16 206 257 "Language.ml" 16 206 270
call(
  stack
)
type(
  string
)
"Language.ml" 16 206 272 "Language.ml" 16 206 273
type(
  t
)
ident(
  int_ref l "Language.ml" 16 206 237 "Language.ml" 16 206 238
)
"Language.ml" 16 206 275 "Language.ml" 16 206 276
type(
  t
)
ident(
  int_ref r "Language.ml" 16 206 244 "Language.ml" 16 206 245
)
"Language.ml" 16 206 250 "Language.ml" 16 206 277
type(
  t
)
"Language.ml" 16 206 239 "Language.ml" 16 206 277
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 206 232 "Language.ml" 16 206 278
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 206 279 "Language.ml" 16 206 280
type(
  t
)
ident(
  int_ref l "Language.ml" 15 161 169 "Language.ml" 15 161 171
)
"Language.ml" 16 206 281 "Language.ml" 16 206 284
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 15 161 177 "Language.ml" 15 161 181
)
"Language.ml" 16 206 217 "Language.ml" 16 206 284
call(
  tail
)
type(
  t
)
"Language.ml" 15 161 169 "Language.ml" 17 285 294
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 16 206 217 "Language.ml" 16 206 284
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 15 161 169 "Language.ml" 17 285 294
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 18 295 303 "Language.ml" 18 295 308
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 15 161 169 "Language.ml" 18 295 308
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 14 148 154 "Language.ml" 18 295 308
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 295 308
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 295 308
)
"Language.ml" 21 324 332 "Language.ml" 21 324 334
type(
  t
)
ident(
  def l "Language.ml" 21 324 332 "Language.ml" 23 472 481
)
"Language.ml" 21 324 334 "Language.ml" 21 324 338
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 21 324 339 "Language.ml" 21 324 343
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 22 393 404 "Language.ml" 22 393 471
)
"Language.ml" 21 324 345 "Language.ml" 21 324 349
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 345 "Language.ml" 21 324 349
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 345 "Language.ml" 21 324 349
)
"Language.ml" 21 324 352 "Language.ml" 21 324 355
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 352 "Language.ml" 21 324 355
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 352 "Language.ml" 21 324 355
)
"Language.ml" 21 324 358 "Language.ml" 21 324 362
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 358 "Language.ml" 21 324 362
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 358 "Language.ml" 21 324 362
)
"Language.ml" 21 324 365 "Language.ml" 21 324 368
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 365 "Language.ml" 21 324 368
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 365 "Language.ml" 21 324 368
)
"Language.ml" 21 324 371 "Language.ml" 21 324 375
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 371 "Language.ml" 21 324 375
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 371 "Language.ml" 21 324 375
)
"Language.ml" 21 324 378 "Language.ml" 21 324 382
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 324 378 "Language.ml" 21 324 382
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 324 378 "Language.ml" 21 324 382
)
"Language.ml" 21 324 345 "Language.ml" 21 324 382
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 21 324 384 "Language.ml" 21 324 388
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 21 324 344 "Language.ml" 21 324 388
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 21 324 344 "Language.ml" 21 324 388
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 21 324 344 "Language.ml" 21 324 388
)
type(
  t
)
ident(
  def _0 "Language.ml" 21 324 344 "Language.ml" 21 324 388
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 21 324 344 "Language.ml" 21 324 388
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 21 324 343 "Language.ml" 21 324 390
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 22 393 404 "Language.ml" 22 393 418
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 22 393 424 "Language.ml" 22 393 425
type(
  t
)
ident(
  def l "Language.ml" 22 393 426 "Language.ml" 22 393 464
)
"Language.ml" 22 393 427 "Language.ml" 22 393 429
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 22 393 437 "Language.ml" 22 393 464
)
"Language.ml" 22 393 431 "Language.ml" 22 393 432
type(
  t
)
ident(
  def r "Language.ml" 22 393 437 "Language.ml" 22 393 464
)
"Language.ml" 22 393 427 "Language.ml" 22 393 432
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 22 393 444 "Language.ml" 22 393 454
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 22 393 455 "Language.ml" 22 393 457
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 22 393 427 "Language.ml" 22 393 429
)
"Language.ml" 22 393 444 "Language.ml" 22 393 457
call(
  stack
)
type(
  string
)
"Language.ml" 22 393 459 "Language.ml" 22 393 460
type(
  t
)
ident(
  int_ref l "Language.ml" 22 393 424 "Language.ml" 22 393 425
)
"Language.ml" 22 393 462 "Language.ml" 22 393 463
type(
  t
)
ident(
  int_ref r "Language.ml" 22 393 431 "Language.ml" 22 393 432
)
"Language.ml" 22 393 437 "Language.ml" 22 393 464
type(
  t
)
"Language.ml" 22 393 426 "Language.ml" 22 393 464
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 393 419 "Language.ml" 22 393 465
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 393 466 "Language.ml" 22 393 467
type(
  t
)
ident(
  int_ref l "Language.ml" 21 324 332 "Language.ml" 21 324 334
)
"Language.ml" 22 393 468 "Language.ml" 22 393 471
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 21 324 339 "Language.ml" 21 324 343
)
"Language.ml" 22 393 404 "Language.ml" 22 393 471
call(
  tail
)
type(
  t
)
"Language.ml" 21 324 332 "Language.ml" 23 472 481
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 22 393 404 "Language.ml" 22 393 471
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 21 324 332 "Language.ml" 23 472 481
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 24 482 490 "Language.ml" 24 482 494
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 21 324 332 "Language.ml" 24 482 494
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 20 311 317 "Language.ml" 24 482 494
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 20 311 317 "Language.ml" 24 482 494
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 20 311 317 "Language.ml" 24 482 494
)
"Language.ml" 27 517 525 "Language.ml" 27 517 527
type(
  t
)
ident(
  def l "Language.ml" 27 517 525 "Language.ml" 29 639 648
)
"Language.ml" 27 517 527 "Language.ml" 27 517 532
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 27 517 533 "Language.ml" 27 517 537
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 28 560 571 "Language.ml" 28 560 638
)
"Language.ml" 27 517 539 "Language.ml" 27 517 542
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 517 539 "Language.ml" 27 517 542
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 517 539 "Language.ml" 27 517 542
)
"Language.ml" 27 517 545 "Language.ml" 27 517 548
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 517 545 "Language.ml" 27 517 548
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 517 545 "Language.ml" 27 517 548
)
"Language.ml" 27 517 539 "Language.ml" 27 517 548
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 27 517 550 "Language.ml" 27 517 555
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 27 517 538 "Language.ml" 27 517 555
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 27 517 538 "Language.ml" 27 517 555
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 27 517 538 "Language.ml" 27 517 555
)
type(
  t
)
ident(
  def _0 "Language.ml" 27 517 538 "Language.ml" 27 517 555
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 27 517 538 "Language.ml" 27 517 555
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 27 517 537 "Language.ml" 27 517 557
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 28 560 571 "Language.ml" 28 560 585
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 28 560 591 "Language.ml" 28 560 592
type(
  t
)
ident(
  def l "Language.ml" 28 560 593 "Language.ml" 28 560 631
)
"Language.ml" 28 560 594 "Language.ml" 28 560 596
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 28 560 604 "Language.ml" 28 560 631
)
"Language.ml" 28 560 598 "Language.ml" 28 560 599
type(
  t
)
ident(
  def r "Language.ml" 28 560 604 "Language.ml" 28 560 631
)
"Language.ml" 28 560 594 "Language.ml" 28 560 599
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 28 560 611 "Language.ml" 28 560 621
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 28 560 622 "Language.ml" 28 560 624
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 28 560 594 "Language.ml" 28 560 596
)
"Language.ml" 28 560 611 "Language.ml" 28 560 624
call(
  stack
)
type(
  string
)
"Language.ml" 28 560 626 "Language.ml" 28 560 627
type(
  t
)
ident(
  int_ref l "Language.ml" 28 560 591 "Language.ml" 28 560 592
)
"Language.ml" 28 560 629 "Language.ml" 28 560 630
type(
  t
)
ident(
  int_ref r "Language.ml" 28 560 598 "Language.ml" 28 560 599
)
"Language.ml" 28 560 604 "Language.ml" 28 560 631
type(
  t
)
"Language.ml" 28 560 593 "Language.ml" 28 560 631
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 560 586 "Language.ml" 28 560 632
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 560 633 "Language.ml" 28 560 634
type(
  t
)
ident(
  int_ref l "Language.ml" 27 517 525 "Language.ml" 27 517 527
)
"Language.ml" 28 560 635 "Language.ml" 28 560 638
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 27 517 533 "Language.ml" 27 517 537
)
"Language.ml" 28 560 571 "Language.ml" 28 560 638
call(
  tail
)
type(
  t
)
"Language.ml" 27 517 525 "Language.ml" 29 639 648
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 28 560 571 "Language.ml" 28 560 638
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 27 517 525 "Language.ml" 29 639 648
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 30 649 657 "Language.ml" 30 649 662
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 27 517 525 "Language.ml" 30 649 662
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 26 505 511 "Language.ml" 30 649 662
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 26 505 511 "Language.ml" 30 649 662
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 26 505 511 "Language.ml" 30 649 662
)
"Language.ml" 33 678 686 "Language.ml" 33 678 688
type(
  t
)
ident(
  def l "Language.ml" 33 678 686 "Language.ml" 35 810 819
)
"Language.ml" 33 678 688 "Language.ml" 33 678 695
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 33 678 696 "Language.ml" 33 678 700
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 34 731 742 "Language.ml" 34 731 809
)
"Language.ml" 33 678 702 "Language.ml" 33 678 705
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 678 702 "Language.ml" 33 678 705
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 678 702 "Language.ml" 33 678 705
)
"Language.ml" 33 678 708 "Language.ml" 33 678 711
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 678 708 "Language.ml" 33 678 711
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 678 708 "Language.ml" 33 678 711
)
"Language.ml" 33 678 714 "Language.ml" 33 678 717
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 678 714 "Language.ml" 33 678 717
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 678 714 "Language.ml" 33 678 717
)
"Language.ml" 33 678 702 "Language.ml" 33 678 717
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 33 678 719 "Language.ml" 33 678 726
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 33 678 701 "Language.ml" 33 678 726
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 33 678 701 "Language.ml" 33 678 726
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 33 678 701 "Language.ml" 33 678 726
)
type(
  t
)
ident(
  def _0 "Language.ml" 33 678 701 "Language.ml" 33 678 726
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 33 678 701 "Language.ml" 33 678 726
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 33 678 700 "Language.ml" 33 678 728
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 34 731 742 "Language.ml" 34 731 756
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 34 731 762 "Language.ml" 34 731 763
type(
  t
)
ident(
  def l "Language.ml" 34 731 764 "Language.ml" 34 731 802
)
"Language.ml" 34 731 765 "Language.ml" 34 731 767
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 34 731 775 "Language.ml" 34 731 802
)
"Language.ml" 34 731 769 "Language.ml" 34 731 770
type(
  t
)
ident(
  def r "Language.ml" 34 731 775 "Language.ml" 34 731 802
)
"Language.ml" 34 731 765 "Language.ml" 34 731 770
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 34 731 782 "Language.ml" 34 731 792
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 34 731 793 "Language.ml" 34 731 795
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 34 731 765 "Language.ml" 34 731 767
)
"Language.ml" 34 731 782 "Language.ml" 34 731 795
call(
  stack
)
type(
  string
)
"Language.ml" 34 731 797 "Language.ml" 34 731 798
type(
  t
)
ident(
  int_ref l "Language.ml" 34 731 762 "Language.ml" 34 731 763
)
"Language.ml" 34 731 800 "Language.ml" 34 731 801
type(
  t
)
ident(
  int_ref r "Language.ml" 34 731 769 "Language.ml" 34 731 770
)
"Language.ml" 34 731 775 "Language.ml" 34 731 802
type(
  t
)
"Language.ml" 34 731 764 "Language.ml" 34 731 802
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 34 731 757 "Language.ml" 34 731 803
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 34 731 804 "Language.ml" 34 731 805
type(
  t
)
ident(
  int_ref l "Language.ml" 33 678 686 "Language.ml" 33 678 688
)
"Language.ml" 34 731 806 "Language.ml" 34 731 809
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 33 678 696 "Language.ml" 33 678 700
)
"Language.ml" 34 731 742 "Language.ml" 34 731 809
call(
  tail
)
type(
  t
)
"Language.ml" 33 678 686 "Language.ml" 35 810 819
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 34 731 742 "Language.ml" 34 731 809
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 33 678 686 "Language.ml" 35 810 819
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 36 820 828 "Language.ml" 36 820 835
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 33 678 686 "Language.ml" 36 820 835
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 32 665 671 "Language.ml" 36 820 835
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 32 665 671 "Language.ml" 36 820 835
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 32 665 671 "Language.ml" 36 820 835
)
"Language.ml" 39 853 861 "Language.ml" 39 853 863
type(
  int
)
ident(
  def n "Language.ml" 39 853 872 "Language.ml" 39 853 879
)
"Language.ml" 39 853 863 "Language.ml" 39 853 870
call(
  tail
)
type(
  ('a, int, 'b) Ostap.Types.parse
)
type(
  ('a, int, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 39 853 863 "Language.ml" 39 853 870
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 39 853 863 "Language.ml" 39 853 870
)
"Language.ml" 39 853 878 "Language.ml" 39 853 879
type(
  int
)
ident(
  int_ref n "Language.ml" 39 853 861 "Language.ml" 39 853 863
)
"Language.ml" 39 853 872 "Language.ml" 39 853 879
type(
  t
)
"Language.ml" 39 853 861 "Language.ml" 39 853 880
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  int -> t
)
type(
  int
)
ident(
  def _0 "Language.ml" 39 853 872 "Language.ml" 39 853 879
)
type(
  (int -> t) ->
  ('a, int, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 40 881 889 "Language.ml" 40 881 891
type(
  string
)
ident(
  def x "Language.ml" 40 881 900 "Language.ml" 40 881 907
)
"Language.ml" 40 881 891 "Language.ml" 40 881 896
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 40 881 891 "Language.ml" 40 881 896
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 40 881 891 "Language.ml" 40 881 896
)
"Language.ml" 40 881 906 "Language.ml" 40 881 907
type(
  string
)
ident(
  int_ref x "Language.ml" 40 881 889 "Language.ml" 40 881 891
)
"Language.ml" 40 881 900 "Language.ml" 40 881 907
type(
  t
)
"Language.ml" 40 881 889 "Language.ml" 40 881 908
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> t
)
type(
  string
)
ident(
  def _0 "Language.ml" 40 881 900 "Language.ml" 40 881 907
)
type(
  (string -> t) ->
  ('a, string, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 41 909 918 "Language.ml" 41 909 921
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 41 909 918 "Language.ml" 41 909 921
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 41 909 918 "Language.ml" 41 909 921
)
"Language.ml" 41 909 922 "Language.ml" 41 909 927
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 41 909 929 "Language.ml" 41 909 932
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 41 909 929 "Language.ml" 41 909 932
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 41 909 929 "Language.ml" 41 909 932
)
"Language.ml" 41 909 917 "Language.ml" 41 909 932
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 41 909 917 "Language.ml" 41 909 932
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "Language.ml" 41 909 917 "Language.ml" 41 909 932
)
type(
  t
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 39 853 861 "Language.ml" 41 909 932
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 38 838 844 "Language.ml" 41 909 932
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 38 838 844 "Language.ml" 41 909 932
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 38 838 844 "Language.ml" 41 909 932
)
"Language.ml" 14 148 154 "Language.ml" 41 909 932
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def primary "Language.ml" 12 135 139 "Language.ml" 44 940 945
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def mulli "Language.ml" 12 135 139 "Language.ml" 44 940 945
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def addi "Language.ml" 12 135 139 "Language.ml" 44 940 945
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def compi "Language.ml" 12 135 139 "Language.ml" 44 940 945
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 12 135 139 "Language.ml" 44 940 945
)
"Language.ml" 57 1108 1121 "Language.ml" 57 1108 1123
type(
  t
)
ident(
  def s "Language.ml" 57 1108 1121 "Language.ml" 59 1195 1202
)
"Language.ml" 57 1108 1123 "Language.ml" 57 1108 1129
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     regexp : string -> string -> ('a, 'c, 'b) Ostap.Types.result; .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref simple "Language.ml" 57 1108 1114 "Language.ml" 64 1376 1423
)
"Language.ml" 57 1108 1130 "Language.ml" 57 1108 1132
type(
  t option
)
ident(
  def d "Language.ml" 58 1148 1149 "Language.ml" 58 1148 1194
)
"Language.ml" 57 1108 1134 "Language.ml" 57 1108 1137
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 57 1108 1134 "Language.ml" 57 1108 1137
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 57 1108 1134 "Language.ml" 57 1108 1137
)
"Language.ml" 57 1108 1138 "Language.ml" 57 1108 1143
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 57 1108 1114 "Language.ml" 64 1376 1423
)
"Language.ml" 57 1108 1133 "Language.ml" 57 1108 1143
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 57 1108 1132 "Language.ml" 57 1108 1145
call(
  stack
)
type(
  ('a, t option, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse -> ('a, t option, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"Language.ml" 58 1148 1155 "Language.ml" 58 1148 1156
type(
  t option
)
ident(
  int_ref d "Language.ml" 57 1108 1130 "Language.ml" 57 1108 1132
)
"Language.ml" 58 1148 1162 "Language.ml" 58 1148 1166
type(
  t option
)
"Language.ml" 58 1148 1170 "Language.ml" 58 1148 1171
type(
  t
)
ident(
  int_ref s "Language.ml" 57 1108 1121 "Language.ml" 57 1108 1123
)
"Language.ml" 58 1148 1179 "Language.ml" 58 1148 1180
type(
  t
)
ident(
  def d "Language.ml" 58 1148 1184 "Language.ml" 58 1148 1194
)
"Language.ml" 58 1148 1174 "Language.ml" 58 1148 1180
type(
  t option
)
"Language.ml" 58 1148 1189 "Language.ml" 58 1148 1190
type(
  t
)
ident(
  int_ref s "Language.ml" 57 1108 1121 "Language.ml" 57 1108 1123
)
"Language.ml" 58 1148 1192 "Language.ml" 58 1148 1193
type(
  t
)
ident(
  int_ref d "Language.ml" 58 1148 1179 "Language.ml" 58 1148 1180
)
"Language.ml" 58 1148 1184 "Language.ml" 58 1148 1194
type(
  t
)
"Language.ml" 58 1148 1149 "Language.ml" 58 1148 1194
type(
  t
)
"Language.ml" 57 1108 1121 "Language.ml" 59 1195 1202
call(
  tail
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t option -> t
)
type(
  t option
)
ident(
  def _0 "Language.ml" 58 1148 1149 "Language.ml" 58 1148 1194
)
type(
  (t option -> t) ->
  ('a, t option, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 57 1108 1121 "Language.ml" 59 1195 1202
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 57 1108 1114 "Language.ml" 59 1195 1202
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 57 1108 1114 "Language.ml" 59 1195 1202
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 57 1108 1114 "Language.ml" 59 1195 1202
)
"Language.ml" 61 1218 1226 "Language.ml" 61 1218 1228
type(
  string
)
ident(
  def x "Language.ml" 61 1218 1226 "Language.ml" 61 1218 1274
)
"Language.ml" 61 1218 1228 "Language.ml" 61 1218 1233
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 61 1218 1228 "Language.ml" 61 1218 1233
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 61 1218 1228 "Language.ml" 61 1218 1233
)
"Language.ml" 61 1218 1234 "Language.ml" 61 1218 1238
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 61 1218 1234 "Language.ml" 61 1218 1238
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 61 1218 1234 "Language.ml" 61 1218 1238
)
"Language.ml" 61 1218 1239 "Language.ml" 61 1218 1241
type(
  Expr.t
)
ident(
  def e "Language.ml" 61 1218 1260 "Language.ml" 61 1218 1273
)
"Language.ml" 61 1218 1243 "Language.ml" 61 1218 1253
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 61 1218 1268 "Language.ml" 61 1218 1269
type(
  string
)
ident(
  int_ref x "Language.ml" 61 1218 1226 "Language.ml" 61 1218 1228
)
"Language.ml" 61 1218 1271 "Language.ml" 61 1218 1272
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 61 1218 1239 "Language.ml" 61 1218 1241
)
"Language.ml" 61 1218 1260 "Language.ml" 61 1218 1273
type(
  t
)
"Language.ml" 61 1218 1226 "Language.ml" 61 1218 1274
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> t
)
type(
  Expr.t
)
ident(
  def _0 "Language.ml" 61 1218 1260 "Language.ml" 61 1218 1273
)
type(
  (Expr.t -> t) ->
  ('a, Expr.t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 61 1218 1226 "Language.ml" 61 1218 1274
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  string
)
ident(
  def _2 "Language.ml" 61 1218 1226 "Language.ml" 61 1218 1274
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 62 1275 1283 "Language.ml" 62 1275 1290
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 62 1275 1283 "Language.ml" 62 1275 1290
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 62 1275 1283 "Language.ml" 62 1275 1290
)
"Language.ml" 62 1275 1292 "Language.ml" 62 1275 1295
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 62 1275 1292 "Language.ml" 62 1275 1295
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 62 1275 1292 "Language.ml" 62 1275 1295
)
"Language.ml" 62 1275 1296 "Language.ml" 62 1275 1298
type(
  string
)
ident(
  def x "Language.ml" 62 1275 1283 "Language.ml" 62 1275 1324
)
"Language.ml" 62 1275 1298 "Language.ml" 62 1275 1303
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 62 1275 1298 "Language.ml" 62 1275 1303
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 62 1275 1298 "Language.ml" 62 1275 1303
)
"Language.ml" 62 1275 1304 "Language.ml" 62 1275 1307
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 62 1275 1304 "Language.ml" 62 1275 1307
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 62 1275 1304 "Language.ml" 62 1275 1307
)
"Language.ml" 62 1275 1322 "Language.ml" 62 1275 1323
type(
  string
)
ident(
  int_ref x "Language.ml" 62 1275 1296 "Language.ml" 62 1275 1298
)
"Language.ml" 62 1275 1317 "Language.ml" 62 1275 1323
type(
  t
)
"Language.ml" 62 1275 1283 "Language.ml" 62 1275 1324
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 62 1275 1317 "Language.ml" 62 1275 1323
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  string
)
ident(
  def _1 "Language.ml" 62 1275 1283 "Language.ml" 62 1275 1324
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 62 1275 1283 "Language.ml" 62 1275 1324
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 63 1325 1333 "Language.ml" 63 1325 1341
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 63 1325 1333 "Language.ml" 63 1325 1341
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 63 1325 1333 "Language.ml" 63 1325 1341
)
"Language.ml" 63 1325 1342 "Language.ml" 63 1325 1345
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 63 1325 1342 "Language.ml" 63 1325 1345
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 63 1325 1342 "Language.ml" 63 1325 1345
)
"Language.ml" 63 1325 1346 "Language.ml" 63 1325 1348
type(
  Expr.t
)
ident(
  def e "Language.ml" 63 1325 1333 "Language.ml" 63 1325 1375
)
"Language.ml" 63 1325 1350 "Language.ml" 63 1325 1360
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 41 909 932
)
"Language.ml" 63 1325 1362 "Language.ml" 63 1325 1365
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 63 1325 1362 "Language.ml" 63 1325 1365
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 63 1325 1362 "Language.ml" 63 1325 1365
)
"Language.ml" 63 1325 1373 "Language.ml" 63 1325 1374
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 63 1325 1346 "Language.ml" 63 1325 1348
)
"Language.ml" 63 1325 1367 "Language.ml" 63 1325 1374
type(
  t
)
"Language.ml" 63 1325 1333 "Language.ml" 63 1325 1375
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 63 1325 1367 "Language.ml" 63 1325 1374
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Expr.t
)
ident(
  def _1 "Language.ml" 63 1325 1333 "Language.ml" 63 1325 1375
)
type(
  ('a, Expr.t, 'b) Ostap.Types.parse ->
  (Expr.t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 63 1325 1333 "Language.ml" 63 1325 1375
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 64 1376 1384 "Language.ml" 64 1376 1391
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 64 1376 1384 "Language.ml" 64 1376 1391
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 64 1376 1384 "Language.ml" 64 1376 1391
)
"Language.ml" 64 1376 1418 "Language.ml" 64 1376 1422
type(
  t
)
"Language.ml" 64 1376 1384 "Language.ml" 64 1376 1423
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> t
)
type(
  'c
)
type(
  ('c -> t) ->
  ('a, 'c, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 61 1218 1226 "Language.ml" 64 1376 1423
call(
  stack
)
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 60 1204 1210 "Language.ml" 64 1376 1423
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 60 1204 1210 "Language.ml" 64 1376 1423
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 60 1204 1210 "Language.ml" 64 1376 1423
)
"Language.ml" 57 1108 1114 "Language.ml" 64 1376 1423
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def simple "Language.ml" 56 1096 1100 "Language.ml" 67 1431 1436
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 56 1096 1100 "Language.ml" 67 1431 1436
)
