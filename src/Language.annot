"Language.ml" 15 161 169 "Language.ml" 15 161 171
type(
  t
)
ident(
  def l "Language.ml" 15 161 169 "Language.ml" 17 274 283
)
"Language.ml" 15 161 171 "Language.ml" 15 161 175
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 15 161 176 "Language.ml" 15 161 180
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 16 195 206 "Language.ml" 16 195 273
)
"Language.ml" 15 161 181 "Language.ml" 15 161 185
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 15 161 181 "Language.ml" 15 161 185
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 15 161 181 "Language.ml" 15 161 185
)
"Language.ml" 15 161 186 "Language.ml" 15 161 190
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 15 161 181 "Language.ml" 15 161 190
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  t
)
ident(
  def _0 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 15 161 180 "Language.ml" 15 161 192
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 16 195 206 "Language.ml" 16 195 220
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 16 195 226 "Language.ml" 16 195 227
type(
  t
)
ident(
  def l "Language.ml" 16 195 228 "Language.ml" 16 195 266
)
"Language.ml" 16 195 229 "Language.ml" 16 195 231
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 16 195 239 "Language.ml" 16 195 266
)
"Language.ml" 16 195 233 "Language.ml" 16 195 234
type(
  t
)
ident(
  def r "Language.ml" 16 195 239 "Language.ml" 16 195 266
)
"Language.ml" 16 195 229 "Language.ml" 16 195 234
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 16 195 246 "Language.ml" 16 195 256
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 16 195 257 "Language.ml" 16 195 259
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 16 195 229 "Language.ml" 16 195 231
)
"Language.ml" 16 195 246 "Language.ml" 16 195 259
call(
  stack
)
type(
  string
)
"Language.ml" 16 195 261 "Language.ml" 16 195 262
type(
  t
)
ident(
  int_ref l "Language.ml" 16 195 226 "Language.ml" 16 195 227
)
"Language.ml" 16 195 264 "Language.ml" 16 195 265
type(
  t
)
ident(
  int_ref r "Language.ml" 16 195 233 "Language.ml" 16 195 234
)
"Language.ml" 16 195 239 "Language.ml" 16 195 266
type(
  t
)
"Language.ml" 16 195 228 "Language.ml" 16 195 266
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 195 221 "Language.ml" 16 195 267
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 195 268 "Language.ml" 16 195 269
type(
  t
)
ident(
  int_ref l "Language.ml" 15 161 169 "Language.ml" 15 161 171
)
"Language.ml" 16 195 270 "Language.ml" 16 195 273
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 15 161 176 "Language.ml" 15 161 180
)
"Language.ml" 16 195 206 "Language.ml" 16 195 273
call(
  tail
)
type(
  t
)
"Language.ml" 15 161 169 "Language.ml" 17 274 283
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 16 195 206 "Language.ml" 16 195 273
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 15 161 169 "Language.ml" 17 274 283
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 18 284 292 "Language.ml" 18 284 296
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 15 161 169 "Language.ml" 18 284 296
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 14 148 154 "Language.ml" 18 284 296
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 284 296
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 284 296
)
"Language.ml" 21 311 319 "Language.ml" 21 311 321
type(
  t
)
ident(
  def l "Language.ml" 21 311 319 "Language.ml" 23 426 435
)
"Language.ml" 21 311 321 "Language.ml" 21 311 326
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 21 311 327 "Language.ml" 21 311 331
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 22 347 358 "Language.ml" 22 347 425
)
"Language.ml" 21 311 332 "Language.ml" 21 311 336
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 311 332 "Language.ml" 21 311 336
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 311 332 "Language.ml" 21 311 336
)
"Language.ml" 21 311 337 "Language.ml" 21 311 342
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 21 311 332 "Language.ml" 21 311 342
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  t
)
ident(
  def _0 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 21 311 331 "Language.ml" 21 311 344
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 22 347 358 "Language.ml" 22 347 372
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 22 347 378 "Language.ml" 22 347 379
type(
  t
)
ident(
  def l "Language.ml" 22 347 380 "Language.ml" 22 347 418
)
"Language.ml" 22 347 381 "Language.ml" 22 347 383
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 22 347 391 "Language.ml" 22 347 418
)
"Language.ml" 22 347 385 "Language.ml" 22 347 386
type(
  t
)
ident(
  def r "Language.ml" 22 347 391 "Language.ml" 22 347 418
)
"Language.ml" 22 347 381 "Language.ml" 22 347 386
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 22 347 398 "Language.ml" 22 347 408
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 22 347 409 "Language.ml" 22 347 411
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 22 347 381 "Language.ml" 22 347 383
)
"Language.ml" 22 347 398 "Language.ml" 22 347 411
call(
  stack
)
type(
  string
)
"Language.ml" 22 347 413 "Language.ml" 22 347 414
type(
  t
)
ident(
  int_ref l "Language.ml" 22 347 378 "Language.ml" 22 347 379
)
"Language.ml" 22 347 416 "Language.ml" 22 347 417
type(
  t
)
ident(
  int_ref r "Language.ml" 22 347 385 "Language.ml" 22 347 386
)
"Language.ml" 22 347 391 "Language.ml" 22 347 418
type(
  t
)
"Language.ml" 22 347 380 "Language.ml" 22 347 418
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 347 373 "Language.ml" 22 347 419
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 347 420 "Language.ml" 22 347 421
type(
  t
)
ident(
  int_ref l "Language.ml" 21 311 319 "Language.ml" 21 311 321
)
"Language.ml" 22 347 422 "Language.ml" 22 347 425
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 21 311 327 "Language.ml" 21 311 331
)
"Language.ml" 22 347 358 "Language.ml" 22 347 425
call(
  tail
)
type(
  t
)
"Language.ml" 21 311 319 "Language.ml" 23 426 435
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 22 347 358 "Language.ml" 22 347 425
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 21 311 319 "Language.ml" 23 426 435
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 24 436 444 "Language.ml" 24 436 449
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 21 311 319 "Language.ml" 24 436 449
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 20 299 305 "Language.ml" 24 436 449
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 20 299 305 "Language.ml" 24 436 449
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 20 299 305 "Language.ml" 24 436 449
)
"Language.ml" 27 473 481 "Language.ml" 27 473 483
type(
  t
)
ident(
  def l "Language.ml" 27 473 481 "Language.ml" 29 605 614
)
"Language.ml" 27 473 483 "Language.ml" 27 473 486
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref eqi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 27 473 487 "Language.ml" 27 473 491
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 28 526 537 "Language.ml" 28 526 604
)
"Language.ml" 27 473 493 "Language.ml" 27 473 497
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 473 493 "Language.ml" 27 473 497
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 473 493 "Language.ml" 27 473 497
)
"Language.ml" 27 473 500 "Language.ml" 27 473 503
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 473 500 "Language.ml" 27 473 503
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 473 500 "Language.ml" 27 473 503
)
"Language.ml" 27 473 506 "Language.ml" 27 473 510
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 473 506 "Language.ml" 27 473 510
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 473 506 "Language.ml" 27 473 510
)
"Language.ml" 27 473 513 "Language.ml" 27 473 516
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 473 513 "Language.ml" 27 473 516
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 473 513 "Language.ml" 27 473 516
)
"Language.ml" 27 473 493 "Language.ml" 27 473 516
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 27 473 518 "Language.ml" 27 473 521
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref eqi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 27 473 492 "Language.ml" 27 473 521
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 27 473 492 "Language.ml" 27 473 521
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 27 473 492 "Language.ml" 27 473 521
)
type(
  t
)
ident(
  def _0 "Language.ml" 27 473 492 "Language.ml" 27 473 521
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 27 473 492 "Language.ml" 27 473 521
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 27 473 491 "Language.ml" 27 473 523
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 28 526 537 "Language.ml" 28 526 551
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 28 526 557 "Language.ml" 28 526 558
type(
  t
)
ident(
  def l "Language.ml" 28 526 559 "Language.ml" 28 526 597
)
"Language.ml" 28 526 560 "Language.ml" 28 526 562
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 28 526 570 "Language.ml" 28 526 597
)
"Language.ml" 28 526 564 "Language.ml" 28 526 565
type(
  t
)
ident(
  def r "Language.ml" 28 526 570 "Language.ml" 28 526 597
)
"Language.ml" 28 526 560 "Language.ml" 28 526 565
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 28 526 577 "Language.ml" 28 526 587
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 28 526 588 "Language.ml" 28 526 590
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 28 526 560 "Language.ml" 28 526 562
)
"Language.ml" 28 526 577 "Language.ml" 28 526 590
call(
  stack
)
type(
  string
)
"Language.ml" 28 526 592 "Language.ml" 28 526 593
type(
  t
)
ident(
  int_ref l "Language.ml" 28 526 557 "Language.ml" 28 526 558
)
"Language.ml" 28 526 595 "Language.ml" 28 526 596
type(
  t
)
ident(
  int_ref r "Language.ml" 28 526 564 "Language.ml" 28 526 565
)
"Language.ml" 28 526 570 "Language.ml" 28 526 597
type(
  t
)
"Language.ml" 28 526 559 "Language.ml" 28 526 597
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 526 552 "Language.ml" 28 526 598
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 526 599 "Language.ml" 28 526 600
type(
  t
)
ident(
  int_ref l "Language.ml" 27 473 481 "Language.ml" 27 473 483
)
"Language.ml" 28 526 601 "Language.ml" 28 526 604
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 27 473 487 "Language.ml" 27 473 491
)
"Language.ml" 28 526 537 "Language.ml" 28 526 604
call(
  tail
)
type(
  t
)
"Language.ml" 27 473 481 "Language.ml" 29 605 614
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 28 526 537 "Language.ml" 28 526 604
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 27 473 481 "Language.ml" 29 605 614
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 30 615 623 "Language.ml" 30 615 626
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref eqi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 27 473 481 "Language.ml" 30 615 626
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 26 460 466 "Language.ml" 30 615 626
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 26 460 466 "Language.ml" 30 615 626
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 26 460 466 "Language.ml" 30 615 626
)
"Language.ml" 34 657 665 "Language.ml" 34 657 667
type(
  t
)
ident(
  def l "Language.ml" 34 657 665 "Language.ml" 36 779 788
)
"Language.ml" 34 657 667 "Language.ml" 34 657 671
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 34 657 672 "Language.ml" 34 657 676
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 35 700 711 "Language.ml" 35 700 778
)
"Language.ml" 34 657 678 "Language.ml" 34 657 682
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 34 657 678 "Language.ml" 34 657 682
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 34 657 678 "Language.ml" 34 657 682
)
"Language.ml" 34 657 685 "Language.ml" 34 657 689
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 34 657 685 "Language.ml" 34 657 689
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 34 657 685 "Language.ml" 34 657 689
)
"Language.ml" 34 657 678 "Language.ml" 34 657 689
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 34 657 691 "Language.ml" 34 657 695
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 34 657 677 "Language.ml" 34 657 695
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 34 657 677 "Language.ml" 34 657 695
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 34 657 677 "Language.ml" 34 657 695
)
type(
  t
)
ident(
  def _0 "Language.ml" 34 657 677 "Language.ml" 34 657 695
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 34 657 677 "Language.ml" 34 657 695
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 34 657 676 "Language.ml" 34 657 697
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 35 700 711 "Language.ml" 35 700 725
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 35 700 731 "Language.ml" 35 700 732
type(
  t
)
ident(
  def l "Language.ml" 35 700 733 "Language.ml" 35 700 771
)
"Language.ml" 35 700 734 "Language.ml" 35 700 736
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 35 700 744 "Language.ml" 35 700 771
)
"Language.ml" 35 700 738 "Language.ml" 35 700 739
type(
  t
)
ident(
  def r "Language.ml" 35 700 744 "Language.ml" 35 700 771
)
"Language.ml" 35 700 734 "Language.ml" 35 700 739
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 35 700 751 "Language.ml" 35 700 761
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 35 700 762 "Language.ml" 35 700 764
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 35 700 734 "Language.ml" 35 700 736
)
"Language.ml" 35 700 751 "Language.ml" 35 700 764
call(
  stack
)
type(
  string
)
"Language.ml" 35 700 766 "Language.ml" 35 700 767
type(
  t
)
ident(
  int_ref l "Language.ml" 35 700 731 "Language.ml" 35 700 732
)
"Language.ml" 35 700 769 "Language.ml" 35 700 770
type(
  t
)
ident(
  int_ref r "Language.ml" 35 700 738 "Language.ml" 35 700 739
)
"Language.ml" 35 700 744 "Language.ml" 35 700 771
type(
  t
)
"Language.ml" 35 700 733 "Language.ml" 35 700 771
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 35 700 726 "Language.ml" 35 700 772
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 35 700 773 "Language.ml" 35 700 774
type(
  t
)
ident(
  int_ref l "Language.ml" 34 657 665 "Language.ml" 34 657 667
)
"Language.ml" 35 700 775 "Language.ml" 35 700 778
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 34 657 672 "Language.ml" 34 657 676
)
"Language.ml" 35 700 711 "Language.ml" 35 700 778
call(
  tail
)
type(
  t
)
"Language.ml" 34 657 665 "Language.ml" 36 779 788
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 35 700 711 "Language.ml" 35 700 778
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 34 657 665 "Language.ml" 36 779 788
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 37 789 797 "Language.ml" 37 789 801
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 34 657 665 "Language.ml" 37 789 801
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 33 646 652 "Language.ml" 37 789 801
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 646 652 "Language.ml" 37 789 801
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 646 652 "Language.ml" 37 789 801
)
"Language.ml" 41 825 833 "Language.ml" 41 825 835
type(
  t
)
ident(
  def l "Language.ml" 41 825 833 "Language.ml" 43 947 956
)
"Language.ml" 41 825 835 "Language.ml" 41 825 840
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 41 825 841 "Language.ml" 41 825 845
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 42 868 879 "Language.ml" 42 868 946
)
"Language.ml" 41 825 847 "Language.ml" 41 825 850
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 41 825 847 "Language.ml" 41 825 850
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 41 825 847 "Language.ml" 41 825 850
)
"Language.ml" 41 825 853 "Language.ml" 41 825 856
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 41 825 853 "Language.ml" 41 825 856
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 41 825 853 "Language.ml" 41 825 856
)
"Language.ml" 41 825 847 "Language.ml" 41 825 856
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 41 825 858 "Language.ml" 41 825 863
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 41 825 846 "Language.ml" 41 825 863
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 41 825 846 "Language.ml" 41 825 863
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 41 825 846 "Language.ml" 41 825 863
)
type(
  t
)
ident(
  def _0 "Language.ml" 41 825 846 "Language.ml" 41 825 863
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 41 825 846 "Language.ml" 41 825 863
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 41 825 845 "Language.ml" 41 825 865
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 42 868 879 "Language.ml" 42 868 893
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 42 868 899 "Language.ml" 42 868 900
type(
  t
)
ident(
  def l "Language.ml" 42 868 901 "Language.ml" 42 868 939
)
"Language.ml" 42 868 902 "Language.ml" 42 868 904
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 42 868 912 "Language.ml" 42 868 939
)
"Language.ml" 42 868 906 "Language.ml" 42 868 907
type(
  t
)
ident(
  def r "Language.ml" 42 868 912 "Language.ml" 42 868 939
)
"Language.ml" 42 868 902 "Language.ml" 42 868 907
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 42 868 919 "Language.ml" 42 868 929
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 42 868 930 "Language.ml" 42 868 932
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 42 868 902 "Language.ml" 42 868 904
)
"Language.ml" 42 868 919 "Language.ml" 42 868 932
call(
  stack
)
type(
  string
)
"Language.ml" 42 868 934 "Language.ml" 42 868 935
type(
  t
)
ident(
  int_ref l "Language.ml" 42 868 899 "Language.ml" 42 868 900
)
"Language.ml" 42 868 937 "Language.ml" 42 868 938
type(
  t
)
ident(
  int_ref r "Language.ml" 42 868 906 "Language.ml" 42 868 907
)
"Language.ml" 42 868 912 "Language.ml" 42 868 939
type(
  t
)
"Language.ml" 42 868 901 "Language.ml" 42 868 939
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 42 868 894 "Language.ml" 42 868 940
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 42 868 941 "Language.ml" 42 868 942
type(
  t
)
ident(
  int_ref l "Language.ml" 41 825 833 "Language.ml" 41 825 835
)
"Language.ml" 42 868 943 "Language.ml" 42 868 946
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 41 825 841 "Language.ml" 41 825 845
)
"Language.ml" 42 868 879 "Language.ml" 42 868 946
call(
  tail
)
type(
  t
)
"Language.ml" 41 825 833 "Language.ml" 43 947 956
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 42 868 879 "Language.ml" 42 868 946
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 41 825 833 "Language.ml" 43 947 956
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 44 957 965 "Language.ml" 44 957 970
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 41 825 833 "Language.ml" 44 957 970
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 40 813 819 "Language.ml" 44 957 970
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 40 813 819 "Language.ml" 44 957 970
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 40 813 819 "Language.ml" 44 957 970
)
"Language.ml" 47 986 994 "Language.ml" 47 986 996
type(
  t
)
ident(
  def l "Language.ml" 47 986 994 "Language.ml" 49 1118 1127
)
"Language.ml" 47 986 996 "Language.ml" 47 986 1003
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 47 986 1004 "Language.ml" 47 986 1008
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 48 1039 1050 "Language.ml" 48 1039 1117
)
"Language.ml" 47 986 1010 "Language.ml" 47 986 1013
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 47 986 1010 "Language.ml" 47 986 1013
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 47 986 1010 "Language.ml" 47 986 1013
)
"Language.ml" 47 986 1016 "Language.ml" 47 986 1019
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 47 986 1016 "Language.ml" 47 986 1019
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 47 986 1016 "Language.ml" 47 986 1019
)
"Language.ml" 47 986 1022 "Language.ml" 47 986 1025
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 47 986 1022 "Language.ml" 47 986 1025
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 47 986 1022 "Language.ml" 47 986 1025
)
"Language.ml" 47 986 1010 "Language.ml" 47 986 1025
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 47 986 1027 "Language.ml" 47 986 1034
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 47 986 1009 "Language.ml" 47 986 1034
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 47 986 1009 "Language.ml" 47 986 1034
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 47 986 1009 "Language.ml" 47 986 1034
)
type(
  t
)
ident(
  def _0 "Language.ml" 47 986 1009 "Language.ml" 47 986 1034
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 47 986 1009 "Language.ml" 47 986 1034
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 47 986 1008 "Language.ml" 47 986 1036
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 48 1039 1050 "Language.ml" 48 1039 1064
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 48 1039 1070 "Language.ml" 48 1039 1071
type(
  t
)
ident(
  def l "Language.ml" 48 1039 1072 "Language.ml" 48 1039 1110
)
"Language.ml" 48 1039 1073 "Language.ml" 48 1039 1075
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 48 1039 1083 "Language.ml" 48 1039 1110
)
"Language.ml" 48 1039 1077 "Language.ml" 48 1039 1078
type(
  t
)
ident(
  def r "Language.ml" 48 1039 1083 "Language.ml" 48 1039 1110
)
"Language.ml" 48 1039 1073 "Language.ml" 48 1039 1078
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 48 1039 1090 "Language.ml" 48 1039 1100
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 48 1039 1101 "Language.ml" 48 1039 1103
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 48 1039 1073 "Language.ml" 48 1039 1075
)
"Language.ml" 48 1039 1090 "Language.ml" 48 1039 1103
call(
  stack
)
type(
  string
)
"Language.ml" 48 1039 1105 "Language.ml" 48 1039 1106
type(
  t
)
ident(
  int_ref l "Language.ml" 48 1039 1070 "Language.ml" 48 1039 1071
)
"Language.ml" 48 1039 1108 "Language.ml" 48 1039 1109
type(
  t
)
ident(
  int_ref r "Language.ml" 48 1039 1077 "Language.ml" 48 1039 1078
)
"Language.ml" 48 1039 1083 "Language.ml" 48 1039 1110
type(
  t
)
"Language.ml" 48 1039 1072 "Language.ml" 48 1039 1110
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 48 1039 1065 "Language.ml" 48 1039 1111
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 48 1039 1112 "Language.ml" 48 1039 1113
type(
  t
)
ident(
  int_ref l "Language.ml" 47 986 994 "Language.ml" 47 986 996
)
"Language.ml" 48 1039 1114 "Language.ml" 48 1039 1117
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 47 986 1004 "Language.ml" 47 986 1008
)
"Language.ml" 48 1039 1050 "Language.ml" 48 1039 1117
call(
  tail
)
type(
  t
)
"Language.ml" 47 986 994 "Language.ml" 49 1118 1127
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 48 1039 1050 "Language.ml" 48 1039 1117
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 47 986 994 "Language.ml" 49 1118 1127
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 50 1128 1136 "Language.ml" 50 1128 1143
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 47 986 994 "Language.ml" 50 1128 1143
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 46 973 979 "Language.ml" 50 1128 1143
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 46 973 979 "Language.ml" 50 1128 1143
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 46 973 979 "Language.ml" 50 1128 1143
)
"Language.ml" 53 1161 1169 "Language.ml" 53 1161 1171
type(
  int
)
ident(
  def n "Language.ml" 53 1161 1180 "Language.ml" 53 1161 1187
)
"Language.ml" 53 1161 1171 "Language.ml" 53 1161 1178
call(
  tail
)
type(
  ('a, int, 'b) Ostap.Types.parse
)
type(
  ('a, int, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 53 1161 1171 "Language.ml" 53 1161 1178
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 53 1161 1171 "Language.ml" 53 1161 1178
)
"Language.ml" 53 1161 1186 "Language.ml" 53 1161 1187
type(
  int
)
ident(
  int_ref n "Language.ml" 53 1161 1169 "Language.ml" 53 1161 1171
)
"Language.ml" 53 1161 1180 "Language.ml" 53 1161 1187
type(
  t
)
"Language.ml" 53 1161 1169 "Language.ml" 53 1161 1188
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  int -> t
)
type(
  int
)
ident(
  def _0 "Language.ml" 53 1161 1180 "Language.ml" 53 1161 1187
)
type(
  (int -> t) ->
  ('a, int, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 54 1189 1197 "Language.ml" 54 1189 1199
type(
  string
)
ident(
  def x "Language.ml" 54 1189 1208 "Language.ml" 54 1189 1215
)
"Language.ml" 54 1189 1199 "Language.ml" 54 1189 1204
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 54 1189 1199 "Language.ml" 54 1189 1204
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 54 1189 1199 "Language.ml" 54 1189 1204
)
"Language.ml" 54 1189 1214 "Language.ml" 54 1189 1215
type(
  string
)
ident(
  int_ref x "Language.ml" 54 1189 1197 "Language.ml" 54 1189 1199
)
"Language.ml" 54 1189 1208 "Language.ml" 54 1189 1215
type(
  t
)
"Language.ml" 54 1189 1197 "Language.ml" 54 1189 1216
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> t
)
type(
  string
)
ident(
  def _0 "Language.ml" 54 1189 1208 "Language.ml" 54 1189 1215
)
type(
  (string -> t) ->
  ('a, string, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 55 1217 1226 "Language.ml" 55 1217 1229
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 55 1217 1226 "Language.ml" 55 1217 1229
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 55 1217 1226 "Language.ml" 55 1217 1229
)
"Language.ml" 55 1217 1230 "Language.ml" 55 1217 1235
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 55 1217 1237 "Language.ml" 55 1217 1240
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 55 1217 1237 "Language.ml" 55 1217 1240
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 55 1217 1237 "Language.ml" 55 1217 1240
)
"Language.ml" 55 1217 1225 "Language.ml" 55 1217 1240
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 55 1217 1225 "Language.ml" 55 1217 1240
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "Language.ml" 55 1217 1225 "Language.ml" 55 1217 1240
)
type(
  t
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 53 1161 1169 "Language.ml" 55 1217 1240
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 52 1146 1152 "Language.ml" 55 1217 1240
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 52 1146 1152 "Language.ml" 55 1217 1240
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 52 1146 1152 "Language.ml" 55 1217 1240
)
"Language.ml" 14 148 154 "Language.ml" 55 1217 1240
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def primary "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def mulli "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def addi "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def eqi "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def compi "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def andi "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 12 135 139 "Language.ml" 58 1248 1253
)
"Language.ml" 71 1416 1429 "Language.ml" 71 1416 1431
type(
  t
)
ident(
  def s "Language.ml" 71 1416 1429 "Language.ml" 73 1503 1510
)
"Language.ml" 71 1416 1431 "Language.ml" 71 1416 1437
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     regexp : string -> string -> ('a, 'c, 'b) Ostap.Types.result; .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref simple "Language.ml" 71 1416 1422 "Language.ml" 78 1684 1731
)
"Language.ml" 71 1416 1438 "Language.ml" 71 1416 1440
type(
  t option
)
ident(
  def d "Language.ml" 72 1456 1457 "Language.ml" 72 1456 1502
)
"Language.ml" 71 1416 1442 "Language.ml" 71 1416 1445
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1416 1442 "Language.ml" 71 1416 1445
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1416 1442 "Language.ml" 71 1416 1445
)
"Language.ml" 71 1416 1446 "Language.ml" 71 1416 1451
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 71 1416 1422 "Language.ml" 78 1684 1731
)
"Language.ml" 71 1416 1441 "Language.ml" 71 1416 1451
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 71 1416 1440 "Language.ml" 71 1416 1453
call(
  stack
)
type(
  ('a, t option, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse -> ('a, t option, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"Language.ml" 72 1456 1463 "Language.ml" 72 1456 1464
type(
  t option
)
ident(
  int_ref d "Language.ml" 71 1416 1438 "Language.ml" 71 1416 1440
)
"Language.ml" 72 1456 1470 "Language.ml" 72 1456 1474
type(
  t option
)
"Language.ml" 72 1456 1478 "Language.ml" 72 1456 1479
type(
  t
)
ident(
  int_ref s "Language.ml" 71 1416 1429 "Language.ml" 71 1416 1431
)
"Language.ml" 72 1456 1487 "Language.ml" 72 1456 1488
type(
  t
)
ident(
  def d "Language.ml" 72 1456 1492 "Language.ml" 72 1456 1502
)
"Language.ml" 72 1456 1482 "Language.ml" 72 1456 1488
type(
  t option
)
"Language.ml" 72 1456 1497 "Language.ml" 72 1456 1498
type(
  t
)
ident(
  int_ref s "Language.ml" 71 1416 1429 "Language.ml" 71 1416 1431
)
"Language.ml" 72 1456 1500 "Language.ml" 72 1456 1501
type(
  t
)
ident(
  int_ref d "Language.ml" 72 1456 1487 "Language.ml" 72 1456 1488
)
"Language.ml" 72 1456 1492 "Language.ml" 72 1456 1502
type(
  t
)
"Language.ml" 72 1456 1457 "Language.ml" 72 1456 1502
type(
  t
)
"Language.ml" 71 1416 1429 "Language.ml" 73 1503 1510
call(
  tail
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t option -> t
)
type(
  t option
)
ident(
  def _0 "Language.ml" 72 1456 1457 "Language.ml" 72 1456 1502
)
type(
  (t option -> t) ->
  ('a, t option, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 71 1416 1429 "Language.ml" 73 1503 1510
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 71 1416 1422 "Language.ml" 73 1503 1510
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1416 1422 "Language.ml" 73 1503 1510
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1416 1422 "Language.ml" 73 1503 1510
)
"Language.ml" 75 1526 1534 "Language.ml" 75 1526 1536
type(
  string
)
ident(
  def x "Language.ml" 75 1526 1534 "Language.ml" 75 1526 1582
)
"Language.ml" 75 1526 1536 "Language.ml" 75 1526 1541
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 75 1526 1536 "Language.ml" 75 1526 1541
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 75 1526 1536 "Language.ml" 75 1526 1541
)
"Language.ml" 75 1526 1542 "Language.ml" 75 1526 1546
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 75 1526 1542 "Language.ml" 75 1526 1546
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 75 1526 1542 "Language.ml" 75 1526 1546
)
"Language.ml" 75 1526 1547 "Language.ml" 75 1526 1549
type(
  Expr.t
)
ident(
  def e "Language.ml" 75 1526 1568 "Language.ml" 75 1526 1581
)
"Language.ml" 75 1526 1551 "Language.ml" 75 1526 1561
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 75 1526 1576 "Language.ml" 75 1526 1577
type(
  string
)
ident(
  int_ref x "Language.ml" 75 1526 1534 "Language.ml" 75 1526 1536
)
"Language.ml" 75 1526 1579 "Language.ml" 75 1526 1580
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 75 1526 1547 "Language.ml" 75 1526 1549
)
"Language.ml" 75 1526 1568 "Language.ml" 75 1526 1581
type(
  t
)
"Language.ml" 75 1526 1534 "Language.ml" 75 1526 1582
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> t
)
type(
  Expr.t
)
ident(
  def _0 "Language.ml" 75 1526 1568 "Language.ml" 75 1526 1581
)
type(
  (Expr.t -> t) ->
  ('a, Expr.t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 75 1526 1534 "Language.ml" 75 1526 1582
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  string
)
ident(
  def _2 "Language.ml" 75 1526 1534 "Language.ml" 75 1526 1582
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 76 1583 1591 "Language.ml" 76 1583 1598
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 76 1583 1591 "Language.ml" 76 1583 1598
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 76 1583 1591 "Language.ml" 76 1583 1598
)
"Language.ml" 76 1583 1600 "Language.ml" 76 1583 1603
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 76 1583 1600 "Language.ml" 76 1583 1603
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 76 1583 1600 "Language.ml" 76 1583 1603
)
"Language.ml" 76 1583 1604 "Language.ml" 76 1583 1606
type(
  string
)
ident(
  def x "Language.ml" 76 1583 1591 "Language.ml" 76 1583 1632
)
"Language.ml" 76 1583 1606 "Language.ml" 76 1583 1611
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 76 1583 1606 "Language.ml" 76 1583 1611
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 76 1583 1606 "Language.ml" 76 1583 1611
)
"Language.ml" 76 1583 1612 "Language.ml" 76 1583 1615
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 76 1583 1612 "Language.ml" 76 1583 1615
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 76 1583 1612 "Language.ml" 76 1583 1615
)
"Language.ml" 76 1583 1630 "Language.ml" 76 1583 1631
type(
  string
)
ident(
  int_ref x "Language.ml" 76 1583 1604 "Language.ml" 76 1583 1606
)
"Language.ml" 76 1583 1625 "Language.ml" 76 1583 1631
type(
  t
)
"Language.ml" 76 1583 1591 "Language.ml" 76 1583 1632
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 76 1583 1625 "Language.ml" 76 1583 1631
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  string
)
ident(
  def _1 "Language.ml" 76 1583 1591 "Language.ml" 76 1583 1632
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 76 1583 1591 "Language.ml" 76 1583 1632
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 77 1633 1641 "Language.ml" 77 1633 1649
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 77 1633 1641 "Language.ml" 77 1633 1649
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 77 1633 1641 "Language.ml" 77 1633 1649
)
"Language.ml" 77 1633 1650 "Language.ml" 77 1633 1653
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 77 1633 1650 "Language.ml" 77 1633 1653
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 77 1633 1650 "Language.ml" 77 1633 1653
)
"Language.ml" 77 1633 1654 "Language.ml" 77 1633 1656
type(
  Expr.t
)
ident(
  def e "Language.ml" 77 1633 1641 "Language.ml" 77 1633 1683
)
"Language.ml" 77 1633 1658 "Language.ml" 77 1633 1668
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 55 1217 1240
)
"Language.ml" 77 1633 1670 "Language.ml" 77 1633 1673
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 77 1633 1670 "Language.ml" 77 1633 1673
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 77 1633 1670 "Language.ml" 77 1633 1673
)
"Language.ml" 77 1633 1681 "Language.ml" 77 1633 1682
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 77 1633 1654 "Language.ml" 77 1633 1656
)
"Language.ml" 77 1633 1675 "Language.ml" 77 1633 1682
type(
  t
)
"Language.ml" 77 1633 1641 "Language.ml" 77 1633 1683
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 77 1633 1675 "Language.ml" 77 1633 1682
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Expr.t
)
ident(
  def _1 "Language.ml" 77 1633 1641 "Language.ml" 77 1633 1683
)
type(
  ('a, Expr.t, 'b) Ostap.Types.parse ->
  (Expr.t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 77 1633 1641 "Language.ml" 77 1633 1683
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 78 1684 1692 "Language.ml" 78 1684 1699
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 78 1684 1692 "Language.ml" 78 1684 1699
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 78 1684 1692 "Language.ml" 78 1684 1699
)
"Language.ml" 78 1684 1726 "Language.ml" 78 1684 1730
type(
  t
)
"Language.ml" 78 1684 1692 "Language.ml" 78 1684 1731
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> t
)
type(
  'c
)
type(
  ('c -> t) ->
  ('a, 'c, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 75 1526 1534 "Language.ml" 78 1684 1731
call(
  stack
)
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 74 1512 1518 "Language.ml" 78 1684 1731
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 74 1512 1518 "Language.ml" 78 1684 1731
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 74 1512 1518 "Language.ml" 78 1684 1731
)
"Language.ml" 71 1416 1422 "Language.ml" 78 1684 1731
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def simple "Language.ml" 70 1404 1408 "Language.ml" 81 1739 1744
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 70 1404 1408 "Language.ml" 81 1739 1744
)
