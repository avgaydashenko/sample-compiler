"Language.ml" 15 161 169 "Language.ml" 15 161 171
type(
  t
)
ident(
  def l "Language.ml" 15 161 169 "Language.ml" 17 274 283
)
"Language.ml" 15 161 171 "Language.ml" 15 161 175
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 15 161 176 "Language.ml" 15 161 180
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 16 195 206 "Language.ml" 16 195 273
)
"Language.ml" 15 161 181 "Language.ml" 15 161 185
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 15 161 181 "Language.ml" 15 161 185
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 15 161 181 "Language.ml" 15 161 185
)
"Language.ml" 15 161 186 "Language.ml" 15 161 190
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 15 161 181 "Language.ml" 15 161 190
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  t
)
ident(
  def _0 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 15 161 181 "Language.ml" 15 161 190
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 15 161 180 "Language.ml" 15 161 192
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 16 195 206 "Language.ml" 16 195 220
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 16 195 226 "Language.ml" 16 195 227
type(
  t
)
ident(
  def l "Language.ml" 16 195 228 "Language.ml" 16 195 266
)
"Language.ml" 16 195 229 "Language.ml" 16 195 231
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 16 195 239 "Language.ml" 16 195 266
)
"Language.ml" 16 195 233 "Language.ml" 16 195 234
type(
  t
)
ident(
  def r "Language.ml" 16 195 239 "Language.ml" 16 195 266
)
"Language.ml" 16 195 229 "Language.ml" 16 195 234
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 16 195 246 "Language.ml" 16 195 256
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 16 195 257 "Language.ml" 16 195 259
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 16 195 229 "Language.ml" 16 195 231
)
"Language.ml" 16 195 246 "Language.ml" 16 195 259
call(
  stack
)
type(
  string
)
"Language.ml" 16 195 261 "Language.ml" 16 195 262
type(
  t
)
ident(
  int_ref l "Language.ml" 16 195 226 "Language.ml" 16 195 227
)
"Language.ml" 16 195 264 "Language.ml" 16 195 265
type(
  t
)
ident(
  int_ref r "Language.ml" 16 195 233 "Language.ml" 16 195 234
)
"Language.ml" 16 195 239 "Language.ml" 16 195 266
type(
  t
)
"Language.ml" 16 195 228 "Language.ml" 16 195 266
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 195 221 "Language.ml" 16 195 267
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 16 195 268 "Language.ml" 16 195 269
type(
  t
)
ident(
  int_ref l "Language.ml" 15 161 169 "Language.ml" 15 161 171
)
"Language.ml" 16 195 270 "Language.ml" 16 195 273
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 15 161 176 "Language.ml" 15 161 180
)
"Language.ml" 16 195 206 "Language.ml" 16 195 273
call(
  tail
)
type(
  t
)
"Language.ml" 15 161 169 "Language.ml" 17 274 283
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 16 195 206 "Language.ml" 16 195 273
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 15 161 169 "Language.ml" 17 274 283
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 18 284 292 "Language.ml" 18 284 296
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref andi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 15 161 169 "Language.ml" 18 284 296
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 14 148 154 "Language.ml" 18 284 296
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 284 296
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 14 148 154 "Language.ml" 18 284 296
)
"Language.ml" 21 311 319 "Language.ml" 21 311 321
type(
  t
)
ident(
  def l "Language.ml" 21 311 319 "Language.ml" 23 426 435
)
"Language.ml" 21 311 321 "Language.ml" 21 311 326
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 21 311 327 "Language.ml" 21 311 331
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 22 347 358 "Language.ml" 22 347 425
)
"Language.ml" 21 311 332 "Language.ml" 21 311 336
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 21 311 332 "Language.ml" 21 311 336
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 21 311 332 "Language.ml" 21 311 336
)
"Language.ml" 21 311 337 "Language.ml" 21 311 342
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 21 311 332 "Language.ml" 21 311 342
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  t
)
ident(
  def _0 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 21 311 332 "Language.ml" 21 311 342
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 21 311 331 "Language.ml" 21 311 344
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 22 347 358 "Language.ml" 22 347 372
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 22 347 378 "Language.ml" 22 347 379
type(
  t
)
ident(
  def l "Language.ml" 22 347 380 "Language.ml" 22 347 418
)
"Language.ml" 22 347 381 "Language.ml" 22 347 383
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 22 347 391 "Language.ml" 22 347 418
)
"Language.ml" 22 347 385 "Language.ml" 22 347 386
type(
  t
)
ident(
  def r "Language.ml" 22 347 391 "Language.ml" 22 347 418
)
"Language.ml" 22 347 381 "Language.ml" 22 347 386
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 22 347 398 "Language.ml" 22 347 408
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 22 347 409 "Language.ml" 22 347 411
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 22 347 381 "Language.ml" 22 347 383
)
"Language.ml" 22 347 398 "Language.ml" 22 347 411
call(
  stack
)
type(
  string
)
"Language.ml" 22 347 413 "Language.ml" 22 347 414
type(
  t
)
ident(
  int_ref l "Language.ml" 22 347 378 "Language.ml" 22 347 379
)
"Language.ml" 22 347 416 "Language.ml" 22 347 417
type(
  t
)
ident(
  int_ref r "Language.ml" 22 347 385 "Language.ml" 22 347 386
)
"Language.ml" 22 347 391 "Language.ml" 22 347 418
type(
  t
)
"Language.ml" 22 347 380 "Language.ml" 22 347 418
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 347 373 "Language.ml" 22 347 419
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 22 347 420 "Language.ml" 22 347 421
type(
  t
)
ident(
  int_ref l "Language.ml" 21 311 319 "Language.ml" 21 311 321
)
"Language.ml" 22 347 422 "Language.ml" 22 347 425
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 21 311 327 "Language.ml" 21 311 331
)
"Language.ml" 22 347 358 "Language.ml" 22 347 425
call(
  tail
)
type(
  t
)
"Language.ml" 21 311 319 "Language.ml" 23 426 435
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 22 347 358 "Language.ml" 22 347 425
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 21 311 319 "Language.ml" 23 426 435
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 24 436 444 "Language.ml" 24 436 449
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref compi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 21 311 319 "Language.ml" 24 436 449
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 20 299 305 "Language.ml" 24 436 449
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 20 299 305 "Language.ml" 24 436 449
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 20 299 305 "Language.ml" 24 436 449
)
"Language.ml" 27 465 473 "Language.ml" 27 465 475
type(
  t
)
ident(
  def l "Language.ml" 27 465 473 "Language.ml" 29 613 622
)
"Language.ml" 27 465 475 "Language.ml" 27 465 479
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 27 465 480 "Language.ml" 27 465 484
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 28 534 545 "Language.ml" 28 534 612
)
"Language.ml" 27 465 486 "Language.ml" 27 465 490
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 486 "Language.ml" 27 465 490
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 486 "Language.ml" 27 465 490
)
"Language.ml" 27 465 493 "Language.ml" 27 465 496
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 493 "Language.ml" 27 465 496
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 493 "Language.ml" 27 465 496
)
"Language.ml" 27 465 499 "Language.ml" 27 465 503
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 499 "Language.ml" 27 465 503
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 499 "Language.ml" 27 465 503
)
"Language.ml" 27 465 506 "Language.ml" 27 465 509
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 506 "Language.ml" 27 465 509
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 506 "Language.ml" 27 465 509
)
"Language.ml" 27 465 512 "Language.ml" 27 465 516
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 512 "Language.ml" 27 465 516
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 512 "Language.ml" 27 465 516
)
"Language.ml" 27 465 519 "Language.ml" 27 465 523
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 27 465 519 "Language.ml" 27 465 523
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 27 465 519 "Language.ml" 27 465 523
)
"Language.ml" 27 465 486 "Language.ml" 27 465 523
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 27 465 525 "Language.ml" 27 465 529
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 27 465 485 "Language.ml" 27 465 529
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 27 465 485 "Language.ml" 27 465 529
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 27 465 485 "Language.ml" 27 465 529
)
type(
  t
)
ident(
  def _0 "Language.ml" 27 465 485 "Language.ml" 27 465 529
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 27 465 485 "Language.ml" 27 465 529
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 27 465 484 "Language.ml" 27 465 531
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 28 534 545 "Language.ml" 28 534 559
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 28 534 565 "Language.ml" 28 534 566
type(
  t
)
ident(
  def l "Language.ml" 28 534 567 "Language.ml" 28 534 605
)
"Language.ml" 28 534 568 "Language.ml" 28 534 570
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 28 534 578 "Language.ml" 28 534 605
)
"Language.ml" 28 534 572 "Language.ml" 28 534 573
type(
  t
)
ident(
  def r "Language.ml" 28 534 578 "Language.ml" 28 534 605
)
"Language.ml" 28 534 568 "Language.ml" 28 534 573
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 28 534 585 "Language.ml" 28 534 595
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 28 534 596 "Language.ml" 28 534 598
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 28 534 568 "Language.ml" 28 534 570
)
"Language.ml" 28 534 585 "Language.ml" 28 534 598
call(
  stack
)
type(
  string
)
"Language.ml" 28 534 600 "Language.ml" 28 534 601
type(
  t
)
ident(
  int_ref l "Language.ml" 28 534 565 "Language.ml" 28 534 566
)
"Language.ml" 28 534 603 "Language.ml" 28 534 604
type(
  t
)
ident(
  int_ref r "Language.ml" 28 534 572 "Language.ml" 28 534 573
)
"Language.ml" 28 534 578 "Language.ml" 28 534 605
type(
  t
)
"Language.ml" 28 534 567 "Language.ml" 28 534 605
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 534 560 "Language.ml" 28 534 606
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 28 534 607 "Language.ml" 28 534 608
type(
  t
)
ident(
  int_ref l "Language.ml" 27 465 473 "Language.ml" 27 465 475
)
"Language.ml" 28 534 609 "Language.ml" 28 534 612
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 27 465 480 "Language.ml" 27 465 484
)
"Language.ml" 28 534 545 "Language.ml" 28 534 612
call(
  tail
)
type(
  t
)
"Language.ml" 27 465 473 "Language.ml" 29 613 622
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 28 534 545 "Language.ml" 28 534 612
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 27 465 473 "Language.ml" 29 613 622
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 30 623 631 "Language.ml" 30 623 635
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref addi "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 27 465 473 "Language.ml" 30 623 635
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 26 452 458 "Language.ml" 30 623 635
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 26 452 458 "Language.ml" 30 623 635
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 26 452 458 "Language.ml" 30 623 635
)
"Language.ml" 33 658 666 "Language.ml" 33 658 668
type(
  t
)
ident(
  def l "Language.ml" 33 658 666 "Language.ml" 35 780 789
)
"Language.ml" 33 658 668 "Language.ml" 33 658 673
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 33 658 674 "Language.ml" 33 658 678
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 34 701 712 "Language.ml" 34 701 779
)
"Language.ml" 33 658 680 "Language.ml" 33 658 683
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 658 680 "Language.ml" 33 658 683
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 658 680 "Language.ml" 33 658 683
)
"Language.ml" 33 658 686 "Language.ml" 33 658 689
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 33 658 686 "Language.ml" 33 658 689
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 33 658 686 "Language.ml" 33 658 689
)
"Language.ml" 33 658 680 "Language.ml" 33 658 689
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 33 658 691 "Language.ml" 33 658 696
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 33 658 679 "Language.ml" 33 658 696
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 33 658 679 "Language.ml" 33 658 696
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 33 658 679 "Language.ml" 33 658 696
)
type(
  t
)
ident(
  def _0 "Language.ml" 33 658 679 "Language.ml" 33 658 696
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 33 658 679 "Language.ml" 33 658 696
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 33 658 678 "Language.ml" 33 658 698
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 34 701 712 "Language.ml" 34 701 726
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 34 701 732 "Language.ml" 34 701 733
type(
  t
)
ident(
  def l "Language.ml" 34 701 734 "Language.ml" 34 701 772
)
"Language.ml" 34 701 735 "Language.ml" 34 701 737
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 34 701 745 "Language.ml" 34 701 772
)
"Language.ml" 34 701 739 "Language.ml" 34 701 740
type(
  t
)
ident(
  def r "Language.ml" 34 701 745 "Language.ml" 34 701 772
)
"Language.ml" 34 701 735 "Language.ml" 34 701 740
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 34 701 752 "Language.ml" 34 701 762
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 34 701 763 "Language.ml" 34 701 765
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 34 701 735 "Language.ml" 34 701 737
)
"Language.ml" 34 701 752 "Language.ml" 34 701 765
call(
  stack
)
type(
  string
)
"Language.ml" 34 701 767 "Language.ml" 34 701 768
type(
  t
)
ident(
  int_ref l "Language.ml" 34 701 732 "Language.ml" 34 701 733
)
"Language.ml" 34 701 770 "Language.ml" 34 701 771
type(
  t
)
ident(
  int_ref r "Language.ml" 34 701 739 "Language.ml" 34 701 740
)
"Language.ml" 34 701 745 "Language.ml" 34 701 772
type(
  t
)
"Language.ml" 34 701 734 "Language.ml" 34 701 772
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 34 701 727 "Language.ml" 34 701 773
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 34 701 774 "Language.ml" 34 701 775
type(
  t
)
ident(
  int_ref l "Language.ml" 33 658 666 "Language.ml" 33 658 668
)
"Language.ml" 34 701 776 "Language.ml" 34 701 779
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 33 658 674 "Language.ml" 33 658 678
)
"Language.ml" 34 701 712 "Language.ml" 34 701 779
call(
  tail
)
type(
  t
)
"Language.ml" 33 658 666 "Language.ml" 35 780 789
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 34 701 712 "Language.ml" 34 701 779
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 33 658 666 "Language.ml" 35 780 789
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 36 790 798 "Language.ml" 36 790 803
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref mulli "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 33 658 666 "Language.ml" 36 790 803
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 32 646 652 "Language.ml" 36 790 803
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 32 646 652 "Language.ml" 36 790 803
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 32 646 652 "Language.ml" 36 790 803
)
"Language.ml" 39 819 827 "Language.ml" 39 819 829
type(
  t
)
ident(
  def l "Language.ml" 39 819 827 "Language.ml" 41 951 960
)
"Language.ml" 39 819 829 "Language.ml" 39 819 836
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 39 819 837 "Language.ml" 39 819 841
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def suf "Language.ml" 40 872 883 "Language.ml" 40 872 950
)
"Language.ml" 39 819 843 "Language.ml" 39 819 846
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 39 819 843 "Language.ml" 39 819 846
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 39 819 843 "Language.ml" 39 819 846
)
"Language.ml" 39 819 849 "Language.ml" 39 819 852
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 39 819 849 "Language.ml" 39 819 852
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 39 819 849 "Language.ml" 39 819 852
)
"Language.ml" 39 819 855 "Language.ml" 39 819 858
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 39 819 855 "Language.ml" 39 819 858
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 39 819 855 "Language.ml" 39 819 858
)
"Language.ml" 39 819 843 "Language.ml" 39 819 858
call(
  stack
)
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 39 819 860 "Language.ml" 39 819 867
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 39 819 842 "Language.ml" 39 819 867
call(
  stack
)
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
type(
  t -> Ostap.Matcher.Token.t * t
)
type(
  Ostap.Matcher.Token.t * t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 39 819 842 "Language.ml" 39 819 867
)
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref _1 "Language.ml" 39 819 842 "Language.ml" 39 819 867
)
type(
  t
)
ident(
  def _0 "Language.ml" 39 819 842 "Language.ml" 39 819 867
)
type(
  t
)
type(
  (t -> Ostap.Matcher.Token.t * t) ->
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 39 819 842 "Language.ml" 39 819 867
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t ->
   ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse) ->
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 39 819 841 "Language.ml" 39 819 869
call(
  stack
)
type(
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t * t, 'b) Ostap.Types.parse ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.many
)
"Language.ml" 40 872 883 "Language.ml" 40 872 897
type(
  (t -> Ostap.Matcher.Token.t * t -> t) ->
  t -> (Ostap.Matcher.Token.t * t) list -> t
)
ident(
  ext_ref List.fold_left
)
"Language.ml" 40 872 903 "Language.ml" 40 872 904
type(
  t
)
ident(
  def l "Language.ml" 40 872 905 "Language.ml" 40 872 943
)
"Language.ml" 40 872 906 "Language.ml" 40 872 908
type(
  Ostap.Matcher.Token.t
)
ident(
  def op "Language.ml" 40 872 916 "Language.ml" 40 872 943
)
"Language.ml" 40 872 910 "Language.ml" 40 872 911
type(
  t
)
ident(
  def r "Language.ml" 40 872 916 "Language.ml" 40 872 943
)
"Language.ml" 40 872 906 "Language.ml" 40 872 911
type(
  Ostap.Matcher.Token.t * t
)
"Language.ml" 40 872 923 "Language.ml" 40 872 933
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"Language.ml" 40 872 934 "Language.ml" 40 872 936
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref op "Language.ml" 40 872 906 "Language.ml" 40 872 908
)
"Language.ml" 40 872 923 "Language.ml" 40 872 936
call(
  stack
)
type(
  string
)
"Language.ml" 40 872 938 "Language.ml" 40 872 939
type(
  t
)
ident(
  int_ref l "Language.ml" 40 872 903 "Language.ml" 40 872 904
)
"Language.ml" 40 872 941 "Language.ml" 40 872 942
type(
  t
)
ident(
  int_ref r "Language.ml" 40 872 910 "Language.ml" 40 872 911
)
"Language.ml" 40 872 916 "Language.ml" 40 872 943
type(
  t
)
"Language.ml" 40 872 905 "Language.ml" 40 872 943
type(
  Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 40 872 898 "Language.ml" 40 872 944
type(
  t -> Ostap.Matcher.Token.t * t -> t
)
"Language.ml" 40 872 945 "Language.ml" 40 872 946
type(
  t
)
ident(
  int_ref l "Language.ml" 39 819 827 "Language.ml" 39 819 829
)
"Language.ml" 40 872 947 "Language.ml" 40 872 950
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  int_ref suf "Language.ml" 39 819 837 "Language.ml" 39 819 841
)
"Language.ml" 40 872 883 "Language.ml" 40 872 950
call(
  tail
)
type(
  t
)
"Language.ml" 39 819 827 "Language.ml" 41 951 960
call(
  stack
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  (Ostap.Matcher.Token.t * t) list -> t
)
type(
  (Ostap.Matcher.Token.t * t) list
)
ident(
  def _0 "Language.ml" 40 872 883 "Language.ml" 40 872 950
)
type(
  ((Ostap.Matcher.Token.t * t) list -> t) ->
  ('a, (Ostap.Matcher.Token.t * t) list, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 39 819 827 "Language.ml" 41 951 960
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 42 961 969 "Language.ml" 42 961 976
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref primary "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 39 819 827 "Language.ml" 42 961 976
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 38 806 812 "Language.ml" 42 961 976
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 38 806 812 "Language.ml" 42 961 976
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 38 806 812 "Language.ml" 42 961 976
)
"Language.ml" 45 994 1002 "Language.ml" 45 994 1004
type(
  int
)
ident(
  def n "Language.ml" 45 994 1013 "Language.ml" 45 994 1020
)
"Language.ml" 45 994 1004 "Language.ml" 45 994 1011
call(
  tail
)
type(
  ('a, int, 'b) Ostap.Types.parse
)
type(
  ('a, int, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 45 994 1004 "Language.ml" 45 994 1011
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 45 994 1004 "Language.ml" 45 994 1011
)
"Language.ml" 45 994 1019 "Language.ml" 45 994 1020
type(
  int
)
ident(
  int_ref n "Language.ml" 45 994 1002 "Language.ml" 45 994 1004
)
"Language.ml" 45 994 1013 "Language.ml" 45 994 1020
type(
  t
)
"Language.ml" 45 994 1002 "Language.ml" 45 994 1021
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  int -> t
)
type(
  int
)
ident(
  def _0 "Language.ml" 45 994 1013 "Language.ml" 45 994 1020
)
type(
  (int -> t) ->
  ('a, int, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 46 1022 1030 "Language.ml" 46 1022 1032
type(
  string
)
ident(
  def x "Language.ml" 46 1022 1041 "Language.ml" 46 1022 1048
)
"Language.ml" 46 1022 1032 "Language.ml" 46 1022 1037
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 46 1022 1032 "Language.ml" 46 1022 1037
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 46 1022 1032 "Language.ml" 46 1022 1037
)
"Language.ml" 46 1022 1047 "Language.ml" 46 1022 1048
type(
  string
)
ident(
  int_ref x "Language.ml" 46 1022 1030 "Language.ml" 46 1022 1032
)
"Language.ml" 46 1022 1041 "Language.ml" 46 1022 1048
type(
  t
)
"Language.ml" 46 1022 1030 "Language.ml" 46 1022 1049
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> t
)
type(
  string
)
ident(
  def _0 "Language.ml" 46 1022 1041 "Language.ml" 46 1022 1048
)
type(
  (string -> t) ->
  ('a, string, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 47 1050 1059 "Language.ml" 47 1050 1062
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 47 1050 1059 "Language.ml" 47 1050 1062
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 47 1050 1059 "Language.ml" 47 1050 1062
)
"Language.ml" 47 1050 1063 "Language.ml" 47 1050 1068
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 47 1050 1070 "Language.ml" 47 1050 1073
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 47 1050 1070 "Language.ml" 47 1050 1073
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 47 1050 1070 "Language.ml" 47 1050 1073
)
"Language.ml" 47 1050 1058 "Language.ml" 47 1050 1073
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  t
)
ident(
  int_ref _0 "Language.ml" 47 1050 1058 "Language.ml" 47 1050 1073
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "Language.ml" 47 1050 1058 "Language.ml" 47 1050 1073
)
type(
  t
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 45 994 1002 "Language.ml" 47 1050 1073
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 44 979 985 "Language.ml" 47 1050 1073
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 44 979 985 "Language.ml" 47 1050 1073
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 44 979 985 "Language.ml" 47 1050 1073
)
"Language.ml" 14 148 154 "Language.ml" 47 1050 1073
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def primary "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def mulli "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def addi "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def compi "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def andi "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 12 135 139 "Language.ml" 51 1104 1109
)
"Language.ml" 66 1361 1374 "Language.ml" 66 1361 1376
type(
  t
)
ident(
  def s "Language.ml" 66 1361 1374 "Language.ml" 68 1448 1455
)
"Language.ml" 66 1361 1376 "Language.ml" 66 1361 1382
type(
  (< getDECIMAL : ('a, int, < add : 'b -> 'b; .. > as 'b) Ostap.Types.result;
     getIDENT : ('a, string, 'b) Ostap.Types.result;
     look : string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result;
     regexp : string -> string -> ('a, 'c, 'b) Ostap.Types.result; .. >
   as 'a, t, 'b)
  Ostap.Types.parse
)
ident(
  int_ref simple "Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
)
"Language.ml" 66 1361 1383 "Language.ml" 66 1361 1385
type(
  t option
)
ident(
  def d "Language.ml" 67 1401 1402 "Language.ml" 67 1401 1447
)
"Language.ml" 66 1361 1387 "Language.ml" 66 1361 1390
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 66 1361 1387 "Language.ml" 66 1361 1390
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 66 1361 1387 "Language.ml" 66 1361 1390
)
"Language.ml" 66 1361 1391 "Language.ml" 66 1361 1396
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
)
"Language.ml" 66 1361 1386 "Language.ml" 66 1361 1396
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 66 1361 1385 "Language.ml" 66 1361 1398
call(
  stack
)
type(
  ('a, t option, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse -> ('a, t option, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"Language.ml" 67 1401 1408 "Language.ml" 67 1401 1409
type(
  t option
)
ident(
  int_ref d "Language.ml" 66 1361 1383 "Language.ml" 66 1361 1385
)
"Language.ml" 67 1401 1415 "Language.ml" 67 1401 1419
type(
  t option
)
"Language.ml" 67 1401 1423 "Language.ml" 67 1401 1424
type(
  t
)
ident(
  int_ref s "Language.ml" 66 1361 1374 "Language.ml" 66 1361 1376
)
"Language.ml" 67 1401 1432 "Language.ml" 67 1401 1433
type(
  t
)
ident(
  def d "Language.ml" 67 1401 1437 "Language.ml" 67 1401 1447
)
"Language.ml" 67 1401 1427 "Language.ml" 67 1401 1433
type(
  t option
)
"Language.ml" 67 1401 1442 "Language.ml" 67 1401 1443
type(
  t
)
ident(
  int_ref s "Language.ml" 66 1361 1374 "Language.ml" 66 1361 1376
)
"Language.ml" 67 1401 1445 "Language.ml" 67 1401 1446
type(
  t
)
ident(
  int_ref d "Language.ml" 67 1401 1432 "Language.ml" 67 1401 1433
)
"Language.ml" 67 1401 1437 "Language.ml" 67 1401 1447
type(
  t
)
"Language.ml" 67 1401 1402 "Language.ml" 67 1401 1447
type(
  t
)
"Language.ml" 66 1361 1374 "Language.ml" 68 1448 1455
call(
  tail
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t option -> t
)
type(
  t option
)
ident(
  def _0 "Language.ml" 67 1401 1402 "Language.ml" 67 1401 1447
)
type(
  (t option -> t) ->
  ('a, t option, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "Language.ml" 66 1361 1374 "Language.ml" 68 1448 1455
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 66 1361 1367 "Language.ml" 68 1448 1455
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 66 1361 1367 "Language.ml" 68 1448 1455
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 66 1361 1367 "Language.ml" 68 1448 1455
)
"Language.ml" 70 1471 1479 "Language.ml" 70 1471 1481
type(
  string
)
ident(
  def x "Language.ml" 70 1471 1479 "Language.ml" 70 1471 1527
)
"Language.ml" 70 1471 1481 "Language.ml" 70 1471 1486
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 70 1471 1481 "Language.ml" 70 1471 1486
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 70 1471 1481 "Language.ml" 70 1471 1486
)
"Language.ml" 70 1471 1487 "Language.ml" 70 1471 1491
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 70 1471 1487 "Language.ml" 70 1471 1491
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 70 1471 1487 "Language.ml" 70 1471 1491
)
"Language.ml" 70 1471 1492 "Language.ml" 70 1471 1494
type(
  Expr.t
)
ident(
  def e "Language.ml" 70 1471 1513 "Language.ml" 70 1471 1526
)
"Language.ml" 70 1471 1496 "Language.ml" 70 1471 1506
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 70 1471 1521 "Language.ml" 70 1471 1522
type(
  string
)
ident(
  int_ref x "Language.ml" 70 1471 1479 "Language.ml" 70 1471 1481
)
"Language.ml" 70 1471 1524 "Language.ml" 70 1471 1525
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 70 1471 1492 "Language.ml" 70 1471 1494
)
"Language.ml" 70 1471 1513 "Language.ml" 70 1471 1526
type(
  t
)
"Language.ml" 70 1471 1479 "Language.ml" 70 1471 1527
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> t
)
type(
  Expr.t
)
ident(
  def _0 "Language.ml" 70 1471 1513 "Language.ml" 70 1471 1526
)
type(
  (Expr.t -> t) ->
  ('a, Expr.t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _1 "Language.ml" 70 1471 1479 "Language.ml" 70 1471 1527
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  string
)
ident(
  def _2 "Language.ml" 70 1471 1479 "Language.ml" 70 1471 1527
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 71 1528 1536 "Language.ml" 71 1528 1543
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1528 1536 "Language.ml" 71 1528 1543
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1528 1536 "Language.ml" 71 1528 1543
)
"Language.ml" 71 1528 1545 "Language.ml" 71 1528 1548
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1528 1545 "Language.ml" 71 1528 1548
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1528 1545 "Language.ml" 71 1528 1548
)
"Language.ml" 71 1528 1549 "Language.ml" 71 1528 1551
type(
  string
)
ident(
  def x "Language.ml" 71 1528 1536 "Language.ml" 71 1528 1577
)
"Language.ml" 71 1528 1551 "Language.ml" 71 1528 1556
call(
  tail
)
type(
  ('a, string, 'b) Ostap.Types.parse
)
type(
  ('a, string, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1528 1551 "Language.ml" 71 1528 1556
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1528 1551 "Language.ml" 71 1528 1556
)
"Language.ml" 71 1528 1557 "Language.ml" 71 1528 1560
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 71 1528 1557 "Language.ml" 71 1528 1560
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 71 1528 1557 "Language.ml" 71 1528 1560
)
"Language.ml" 71 1528 1575 "Language.ml" 71 1528 1576
type(
  string
)
ident(
  int_ref x "Language.ml" 71 1528 1549 "Language.ml" 71 1528 1551
)
"Language.ml" 71 1528 1570 "Language.ml" 71 1528 1576
type(
  t
)
"Language.ml" 71 1528 1536 "Language.ml" 71 1528 1577
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  string -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 71 1528 1570 "Language.ml" 71 1528 1576
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  string
)
ident(
  def _1 "Language.ml" 71 1528 1536 "Language.ml" 71 1528 1577
)
type(
  ('a, string, 'b) Ostap.Types.parse ->
  (string -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 71 1528 1536 "Language.ml" 71 1528 1577
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 72 1578 1586 "Language.ml" 72 1578 1594
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 72 1578 1586 "Language.ml" 72 1578 1594
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 72 1578 1586 "Language.ml" 72 1578 1594
)
"Language.ml" 72 1578 1595 "Language.ml" 72 1578 1598
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 72 1578 1595 "Language.ml" 72 1578 1598
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 72 1578 1595 "Language.ml" 72 1578 1598
)
"Language.ml" 72 1578 1599 "Language.ml" 72 1578 1601
type(
  Expr.t
)
ident(
  def e "Language.ml" 72 1578 1586 "Language.ml" 72 1578 1628
)
"Language.ml" 72 1578 1603 "Language.ml" 72 1578 1613
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 72 1578 1615 "Language.ml" 72 1578 1618
call(
  tail
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string -> ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 72 1578 1615 "Language.ml" 72 1578 1618
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 72 1578 1615 "Language.ml" 72 1578 1618
)
"Language.ml" 72 1578 1626 "Language.ml" 72 1578 1627
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 72 1578 1599 "Language.ml" 72 1578 1601
)
"Language.ml" 72 1578 1620 "Language.ml" 72 1578 1627
type(
  t
)
"Language.ml" 72 1578 1586 "Language.ml" 72 1578 1628
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Ostap.Matcher.Token.t -> t
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "Language.ml" 72 1578 1620 "Language.ml" 72 1578 1627
)
type(
  Ostap.Matcher.Token.t
)
type(
  (Ostap.Matcher.Token.t -> t) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  Expr.t
)
ident(
  def _1 "Language.ml" 72 1578 1586 "Language.ml" 72 1578 1628
)
type(
  ('a, Expr.t, 'b) Ostap.Types.parse ->
  (Expr.t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _2 "Language.ml" 72 1578 1586 "Language.ml" 72 1578 1628
)
type(
  Ostap.Matcher.Token.t
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Types.parse ->
  (Ostap.Matcher.Token.t -> ('a, t, 'b) Ostap.Types.parse) ->
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 73 1629 1637 "Language.ml" 73 1629 1644
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 73 1629 1637 "Language.ml" 73 1629 1644
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 73 1629 1637 "Language.ml" 73 1629 1644
)
"Language.ml" 73 1629 1671 "Language.ml" 73 1629 1675
type(
  t
)
"Language.ml" 73 1629 1637 "Language.ml" 73 1629 1676
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> t
)
type(
  'c
)
type(
  ('c -> t) ->
  ('a, 'c, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"Language.ml" 74 1677 1685 "Language.ml" 74 1677 1690
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 74 1677 1685 "Language.ml" 74 1677 1690
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 74 1677 1685 "Language.ml" 74 1677 1690
)
"Language.ml" 74 1677 1698 "Language.ml" 74 1677 1700
type(
  Expr.t
)
ident(
  def e "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
"Language.ml" 74 1677 1702 "Language.ml" 74 1677 1712
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 75 1714 1722 "Language.ml" 75 1714 1729
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 75 1714 1722 "Language.ml" 75 1714 1729
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 75 1714 1722 "Language.ml" 75 1714 1729
)
"Language.ml" 75 1714 1735 "Language.ml" 75 1714 1738
type(
  t
)
ident(
  def s1 "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
"Language.ml" 75 1714 1738 "Language.ml" 75 1714 1743
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
)
"Language.ml" 76 1744 1752 "Language.ml" 76 1744 1759
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 76 1744 1752 "Language.ml" 76 1744 1759
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 76 1744 1752 "Language.ml" 76 1744 1759
)
"Language.ml" 76 1744 1765 "Language.ml" 76 1744 1768
type(
  t
)
ident(
  def s2 "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
"Language.ml" 76 1744 1768 "Language.ml" 76 1744 1773
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
)
"Language.ml" 77 1785 1793 "Language.ml" 77 1785 1798
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 77 1785 1793 "Language.ml" 77 1785 1798
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 77 1785 1793 "Language.ml" 77 1785 1798
)
"Language.ml" 77 1785 1831 "Language.ml" 77 1785 1832
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 74 1677 1698 "Language.ml" 74 1677 1700
)
"Language.ml" 77 1785 1834 "Language.ml" 77 1785 1836
type(
  t
)
ident(
  int_ref s1 "Language.ml" 75 1714 1735 "Language.ml" 75 1714 1738
)
"Language.ml" 77 1785 1838 "Language.ml" 77 1785 1840
type(
  t
)
ident(
  int_ref s2 "Language.ml" 76 1744 1765 "Language.ml" 76 1744 1768
)
"Language.ml" 77 1785 1827 "Language.ml" 77 1785 1841
type(
  t
)
"Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> t
)
type(
  'c
)
type(
  ('c -> t) ->
  ('a, 'c, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  t
)
ident(
  def _1 "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Expr.t
)
ident(
  def _2 "Language.ml" 74 1677 1685 "Language.ml" 77 1785 1842
)
type(
  ('a, Expr.t, 'b) Ostap.Types.parse ->
  (Expr.t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 78 1843 1851 "Language.ml" 78 1843 1859
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 78 1843 1851 "Language.ml" 78 1843 1859
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 78 1843 1851 "Language.ml" 78 1843 1859
)
"Language.ml" 78 1843 1864 "Language.ml" 78 1843 1866
type(
  Expr.t
)
ident(
  def e "Language.ml" 78 1843 1851 "Language.ml" 80 1909 1964
)
"Language.ml" 78 1843 1868 "Language.ml" 78 1843 1878
type(
  ('a, Expr.t, 'b) Ostap.Types.parse
)
ident(
  int_ref Expr.parse "Language.ml" 14 148 154 "Language.ml" 47 1050 1073
)
"Language.ml" 79 1880 1888 "Language.ml" 79 1880 1893
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 79 1880 1888 "Language.ml" 79 1880 1893
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 79 1880 1888 "Language.ml" 79 1880 1893
)
"Language.ml" 79 1880 1901 "Language.ml" 79 1880 1903
type(
  t
)
ident(
  def s "Language.ml" 78 1843 1851 "Language.ml" 80 1909 1964
)
"Language.ml" 79 1880 1903 "Language.ml" 79 1880 1908
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  int_ref parse "Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
)
"Language.ml" 80 1909 1917 "Language.ml" 80 1909 1922
call(
  tail
)
call(
  stack
)
type(
  ('a, 'c, 'b) Ostap.Types.parse
)
type(
  ('a, 'c, 'b) Ostap.Types.result
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string -> string -> ('a, 'c, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 80 1909 1917 "Language.ml" 80 1909 1922
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 80 1909 1917 "Language.ml" 80 1909 1922
)
"Language.ml" 80 1909 1958 "Language.ml" 80 1909 1959
type(
  Expr.t
)
ident(
  int_ref e "Language.ml" 78 1843 1864 "Language.ml" 78 1843 1866
)
"Language.ml" 80 1909 1961 "Language.ml" 80 1909 1962
type(
  t
)
ident(
  int_ref s "Language.ml" 79 1880 1901 "Language.ml" 79 1880 1903
)
"Language.ml" 80 1909 1951 "Language.ml" 80 1909 1963
type(
  t
)
"Language.ml" 78 1843 1851 "Language.ml" 80 1909 1964
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  Expr.t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  t -> ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  'c -> t
)
type(
  'c
)
type(
  ('c -> t) ->
  ('a, 'c, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "Language.ml" 78 1843 1851 "Language.ml" 80 1909 1964
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  (t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  Expr.t
)
ident(
  def _1 "Language.ml" 78 1843 1851 "Language.ml" 80 1909 1964
)
type(
  ('a, Expr.t, 'b) Ostap.Types.parse ->
  (Expr.t -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'c
)
type(
  ('a, 'c, 'b) Ostap.Types.parse ->
  ('c -> ('a, t, 'b) Ostap.Types.parse) -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"Language.ml" 70 1471 1479 "Language.ml" 80 1909 1964
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('a, t, 'b) Ostap.Types.parse ->
  ('a, t, 'b) Ostap.Types.parse -> ('a, t, 'b) Ostap.Types.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"Language.ml" 69 1457 1463 "Language.ml" 80 1909 1964
call(
  tail
)
type(
  'a -> ('a, t, 'b) Ostap.Types.result
)
type(
  ('a, t, 'b) Ostap.Types.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "Language.ml" 69 1457 1463 "Language.ml" 80 1909 1964
)
type(
  'a
)
ident(
  def _ostap_stream "Language.ml" 69 1457 1463 "Language.ml" 80 1909 1964
)
"Language.ml" 66 1361 1367 "Language.ml" 80 1909 1964
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def simple "Language.ml" 65 1349 1353 "Language.ml" 83 1993 1998
)
type(
  ('a, t, 'b) Ostap.Types.parse
)
ident(
  def parse "Language.ml" 65 1349 1353 "Language.ml" 83 1993 1998
)
